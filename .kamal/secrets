# If SECRETS_FROM_ENV is set (for e.g., in Github Actions where it's set to true), we'll use the secrets from the environment, else we will load it from 1Password.
SECRETS=$(if [ -n "$SECRETS_FROM_ENV" ]; then echo ""; else kamal secrets fetch --adapter 1password --account Graasp --from DevOps/phoenix-admin dev/SECRET_KEY_BASE dev/POSTGRES_PASSWORD dev/POSTGRES_DB dev/POSTGRES_HOST dev/POSTGRES_USER dev/MAILER_SES_ACCESS_KEY dev/MAILER_SES_SECRET; fi)

# Secrets from either ENV of the above extracted 1Password "SECRETS"
SECRET_KEY_BASE=$(if [ -n "$SECRETS" ]; then kamal secrets extract SECRET_KEY_BASE $SECRETS; else echo "$SECRET_KEY_BASE"; fi)
MAILER_SES_ACCESS_KEY=$(if [ -n "$SECRETS" ]; then kamal secrets extract MAILER_SES_ACCESS_KEY $SECRETS; else echo "$MAILER_SES_ACCESS_KEY"; fi)
MAILER_SES_SECRET=$(if [ -n "$SECRETS" ]; then kamal secrets extract MAILER_SES_SECRET $SECRETS; else echo "$MAILER_SES_SECRET"; fi)

POSTGRES_PASSWORD=$(if [ -n "$SECRETS" ]; then kamal secrets extract POSTGRES_PASSWORD $SECRETS; else echo "$POSTGRES_PASSWORD"; fi)
POSTGRES_USER=$(if [ -n "$SECRETS" ]; then kamal secrets extract POSTGRES_USER $SECRETS; else echo "$POSTGRES_USER"; fi)
POSTGRES_HOST=$(if [ -n "$SECRETS" ]; then kamal secrets extract POSTGRES_HOST $SECRETS; else echo "$POSTGRES_HOST"; fi)
POSTGRES_DB=$(if [ -n "$SECRETS" ]; then kamal secrets extract POSTGRES_DB $SECRETS; else echo "$POSTGRES_DB"; fi)
DATABASE_URL=ecto://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST/$POSTGRES_DB
