# stage1 - build environment
FROM node:14-alpine as build

RUN apk add --no-cache ca-certificates jq

WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY ./package.json /app/
COPY ./yarn.lock /app/
RUN yarn
COPY . /app
RUN jq 'to_entries | map_values({ (.key) : ("$" + .key) }) | reduce .[] as $item ({}; . + $item)' ./src/env.json > ./src/env.tmp.json && mv ./src/env.tmp.json ./src/env.json
RUN yarn build

# stage 2 - production environment
FROM nginx:stable-alpine

RUN apk add --no-cache ca-certificates bash

ENV JSFOLDER=/usr/share/nginx/html/static/js/*.js
COPY ./scripts/start.sh /usr/bin/start.sh
RUN chmod +x /usr/bin/start.sh
COPY --from=build /app/build /usr/share/nginx/html
# override default configuration
COPY nginx/nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["start.sh"]
